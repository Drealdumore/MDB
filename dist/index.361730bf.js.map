{"mappings":"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","sources":["<anon>","src/script.js"],"sourcesContent":["const discoverEndpoint = \"https://api.themoviedb.org/3/discover/movie\";\nconst apiKey = \"7eae2080d0b3d02dcdb56c3aba64a598\";\nconst moviesContainer = document.querySelector(\".cards\");\nconst moviesPopup = document.querySelector(\".popup\");\nconst input = document.querySelectorAll(\".input\");\nconst success = document.querySelector(\".success\");\nconst pageName = document.querySelector(\".name\");\nconst trendingSidebar = document.querySelector(\".bx-trending-up\");\nconst searchSidebar = document.querySelector(\".bx-search\");\nconst topRatedSidebar = document.querySelector(\".bx-trophy\");\nconst upcomingSidebar = document.querySelector(\".bxs-hourglass\");\nconst popularSidebar = document.querySelector(\".bxs-hot\");\nconst seriesSidebar = document.querySelector(\".bx-tv\");\nconst trendingTopNav = document.getElementById(\"trending\");\nconst browseSidebar = document.querySelector(\".bx-compass\");\nconst browseTopNav = document.getElementById(\"browse\");\nconst watchlistSidebar = document.querySelector(\".bx-movie-play\");\nconst watchlistTopNav = document.getElementById(\"watchlist\");\nconst seriesTopNav = document.getElementById(\"series\");\nlet sidebar = document.querySelector(\".sidebar\");\nlet closeBtn = document.querySelector(\"#btn\");\nconst browseLink = document.getElementById(\"browseLink\");\nconst trendingLink = document.getElementById(\"trendingLink\");\nconst tvSeriesLink = document.getElementById(\"tvSeriesLink\");\nconst watchlistLink = document.getElementById(\"watchlistLink\");\nconst topRatedLink = document.getElementById(\"topRatedLink\");\nconst popularLink = document.getElementById(\"popularLink\");\nconst upcomingLink = document.getElementById(\"upcomingLink\");\nconst goToTop = document.querySelector(\".goToTop\");\nconst options = {\n    method: \"GET\",\n    headers: {\n        accept: \"application/json\",\n        Authorization: \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3ZWFlMjA4MGQwYjNkMDJkY2RiNTZjM2FiYTY0YTU5OCIsInN1YiI6IjY1NTY5ZGFiMjJhZjNlMDBjNjNiNzcyNCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.vSLXJx8skM5XxasjJw4kUh6y1fyMkbZ-cJMtmav_JE8\"\n    }\n};\nconst discoverMovies = async function() {\n    try {\n        const res = await fetch(`${discoverEndpoint}?include_adult=false&include_video=false&language=en-US&page=1&sort_by=popularity.desc`, options);\n        const data = await res.json();\n        if (!res.ok) throw new Error(`${data.message} (${res.status})`);\n        if (data.results && data.results.length > 0) {\n            movies = data.results;\n            displayMovies(movies);\n        }\n        input.forEach((input)=>{\n            input.value = \"\";\n        });\n        pageName.innerHTML = \"Browse\";\n        browseSidebar.style.backgroundColor = \"white\";\n        browseSidebar.style.color = \"black\";\n        browseTopNav.classList.add(\"nav__active\");\n        trendingSidebar.style.backgroundColor = \"\";\n        trendingSidebar.style.color = \"\";\n        trendingTopNav.classList.remove(\"nav__active\");\n        topRatedSidebar.style.backgroundColor = \"\";\n        topRatedSidebar.style.color = \"\";\n        watchlistSidebar.style.backgroundColor = \"\";\n        watchlistSidebar.style.color = \"\";\n        watchlistTopNav.classList.remove(\"nav__active\");\n        upcomingSidebar.style.backgroundColor = \"\";\n        upcomingSidebar.style.color = \"\";\n        popularSidebar.style.backgroundColor = \"\";\n        popularSidebar.style.color = \"\";\n        // searchSidebar.style.display = \"none\";\n        searchSidebar.style.backgroundColor = \"\";\n        searchSidebar.style.color = \"\";\n    } catch (err) {\n        console.error(err);\n    }\n};\nconst displayMovies = function(movies1) {\n    movies1.forEach((movie)=>{\n        const markup = `\r\n      <div class=\"movie__card\" data-title=\"${movie.title}\" data-id=\"${movie.id}\">\r\n        <img src=\"https://image.tmdb.org/t/p/w500/${movie.poster_path}\" alt=\"${movie.title}\">\r\n        <div class=\"div__detail\">\r\n          <h3>${movie.title}</h3>\r\n          <div class=\"movie__bottom\">\r\n          <span>${movie.release_date.substring(0, 4)}</span>\r\n          <span>\r\n          <i class='bx bx-plus-circle' onclick=\"addToWatchlist(event, ${movie.id});\"></i>\r\n          <h5 class='hover'>Add to Watchlist</h5>\r\n          \r\n          </span>\r\n        </div>\r\n        </div>\r\n      </div>\r\n    `;\n        moviesContainer.insertAdjacentHTML(\"beforeend\", markup);\n    });\n    const movieCards = document.querySelectorAll(\".movie__card\");\n    movieCards.forEach((card)=>{\n        card.addEventListener(\"click\", cardClick);\n    });\n};\nconst cardClick = function(event) {\n    const clickedMovieTitle = event.currentTarget.dataset.title;\n    const clickedMovie = movies.find((movie)=>movie.title === clickedMovieTitle);\n    moviesPopup.innerHTML = \"\";\n    displayPopup(clickedMovie);\n    moviesPopup.style.display = \"\";\n};\nconst displayPopup = function(movie) {\n    const popupMarkup = `\r\n  <div class=\"overlay\">\r\n    <div class=\"movie_card\">\r\n      <div class=\"info_section\">\r\n      <span class=\"close\">&times;</span>\r\n\r\n        <div class=\"movie_header\">\r\n          <img class=\"locandina\" src=\"https://image.tmdb.org/t/p/w500/${movie.poster_path}\" alt=\"${movie.title}\">\r\n          <h1>${movie.title}</h1>\r\n          <h4>Released: ${movie.release_date.substring(0, 4)}</h4>\r\n        </div>\r\n        <div class=\"movie_desc\">\r\n          <p class=\"text\">${movie.overview}</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"blur_back ave_back\" style='background: url(\"https://image.tmdb.org/t/p/w500/${movie.backdrop_path}\"); background-size: cover; background-repeat: no-repeat;'></div>\r\n    </div>\r\n    </div>\r\n  `;\n    moviesPopup.insertAdjacentHTML(\"afterbegin\", popupMarkup);\n    const closePopup = document.querySelector(\".close\");\n    const movieCard = document.querySelector(\".movie_card\");\n    closePopup.addEventListener(\"click\", ()=>{\n        movieCard.style.animation = \"holeOut .5s ease\";\n        setTimeout(()=>{\n            moviesPopup.style.display = \"none\";\n        }, 400);\n    });\n};\nconst trendingMovies = async function() {\n    try {\n        const res = await fetch(\"https://api.themoviedb.org/3/trending/movie/day?language=en-US\", options);\n        const data = await res.json();\n        if (!res.ok) throw new Error(`${data.message} (${res.status})`);\n        if (data.results && data.results.length > 0) {\n            movies = data.results;\n            moviesContainer.innerHTML = \"\";\n            displayMovies(movies);\n        }\n        input.forEach((input)=>{\n            input.value = \"\";\n        });\n        browseSidebar.style.backgroundColor = \"\";\n        browseSidebar.style.color = \"\";\n        trendingTopNav.classList.add(\"nav__active\");\n        browseTopNav.classList.remove(\"nav__active\");\n        trendingSidebar.style.backgroundColor = \"\";\n        trendingSidebar.style.color = \"\";\n        topRatedSidebar.style.backgroundColor = \"\";\n        topRatedSidebar.style.color = \"\";\n        watchlistSidebar.style.backgroundColor = \"\";\n        watchlistSidebar.style.color = \"\";\n        watchlistTopNav.classList.remove(\"nav__active\");\n        popularSidebar.style.backgroundColor = \"\";\n        popularSidebar.style.color = \"\";\n        pageName.innerHTML = \"Trending Movies\";\n        trendingSidebar.style.backgroundColor = \"white\";\n        trendingSidebar.style.color = \"black\";\n        trendingTopNav.classList.add(\"nav__active\");\n        upcomingSidebar.style.backgroundColor = \"\";\n        upcomingSidebar.style.color = \"\";\n        searchSidebar.style.backgroundColor = \"\";\n        searchSidebar.style.color = \"\";\n        if (sidebar.classList.contains(\"open\")) {\n            sidebar.classList.remove(\"open\");\n            menuBtnChange();\n        }\n    } catch (err) {\n        console.error(err);\n    }\n};\nconst searchMovies = async function(query) {\n    try {\n        const res = await fetch(`https://api.themoviedb.org/3/search/movie?include_adult=false&language=en-US&page=1&query=${query}`, options);\n        const data = await res.json();\n        if (!res.ok) throw new Error(`${data.message} (${res.status})`);\n        movies = data.results.filter((movie)=>movie.poster_path !== null && movie.backdrop_path !== null);\n        if (data.results && data.results.length > 0) {\n            moviesContainer.innerHTML = \"\";\n            displayMovies(movies);\n        }\n        pageName.innerHTML = \"Search\";\n        searchSidebar.style.backgroundColor = \"white\";\n        searchSidebar.style.color = \"black\";\n        searchSidebar.style.display = \"block\";\n        browseSidebar.style.backgroundColor = \"\";\n        browseSidebar.style.color = \"\";\n        watchlistSidebar.style.backgroundColor = \"\";\n        watchlistSidebar.style.color = \"\";\n        watchlistTopNav.classList.remove(\"nav__active\");\n        trendingTopNav.classList.remove(\"nav__active\");\n        browseTopNav.classList.remove(\"nav__active\");\n        popularSidebar.style.backgroundColor = \"\";\n        popularSidebar.style.color = \"\";\n        if (sidebar.classList.contains(\"open\")) {\n            sidebar.classList.remove(\"open\");\n            menuBtnChange();\n        }\n    } catch (err) {\n        console.error(err);\n    }\n};\ninput.forEach((input)=>{\n    input.addEventListener(\"keydown\", function(event) {\n        if (event.key === \"Enter\") {\n            const query = event.target.value;\n            searchMovies(query);\n        }\n    });\n});\nconst addToWatchlist = async function(event, movieIdToAdd) {\n    try {\n        event.stopPropagation();\n        const options = {\n            method: \"POST\",\n            headers: {\n                accept: \"application/json\",\n                \"content-type\": \"application/json\",\n                Authorization: \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3ZWFlMjA4MGQwYjNkMDJkY2RiNTZjM2FiYTY0YTU5OCIsInN1YiI6IjY1NTY5ZGFiMjJhZjNlMDBjNjNiNzcyNCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.vSLXJx8skM5XxasjJw4kUh6y1fyMkbZ-cJMtmav_JE8\"\n            },\n            body: JSON.stringify({\n                media_type: \"movie\",\n                media_id: movieIdToAdd,\n                watchlist: true\n            })\n        };\n        const res = await fetch(\"https://api.themoviedb.org/3/account/20711933/watchlist\", options);\n        success.style.display = \"block\";\n        setTimeout(()=>{\n            success.style.display = \"none\";\n        }, 3000);\n        const data = await res.json();\n        if (!res.ok) throw new Error(`${data.message} (${res.status})`);\n    } catch (err) {\n        console.error(err);\n    }\n};\nconst getWatchlist = async function(movieIdToAdd) {\n    try {\n        const res = await fetch(\"https://api.themoviedb.org/3/account/20711933/watchlist/movies?language=en-US&page=1&sort_by=created_at.asc\", options);\n        const data = await res.json();\n        if (!res.ok) throw new Error(`${data.message} (${res.status})`);\n        movies = data.results.filter((movie)=>movie.poster_path !== null && movie.backdrop_path !== null);\n        if (data.results && data.results.length > 0) {\n            moviesContainer.innerHTML = \"\";\n            displayWatchlist(movies);\n        }\n        input.forEach((input)=>{\n            input.value = \"\";\n        });\n        pageName.innerHTML = \"Watchlist\";\n        watchlistSidebar.style.backgroundColor = \"white\";\n        watchlistSidebar.style.color = \"black\";\n        searchSidebar.style.backgroundColor = \"\";\n        searchSidebar.style.color = \"\";\n        popularSidebar.style.backgroundColor = \"\";\n        popularSidebar.style.color = \"\";\n        browseSidebar.style.backgroundColor = \"\";\n        browseSidebar.style.color = \"\";\n        trendingTopNav.classList.remove(\"nav__active\");\n        browseTopNav.classList.remove(\"nav__active\");\n        seriesTopNav.classList.remove(\"nav__active\");\n        watchlistTopNav.classList.add(\"nav__active\");\n        upcomingSidebar.style.backgroundColor = \"\";\n        upcomingSidebar.style.color = \"\";\n        topRatedSidebar.style.backgroundColor = \"\";\n        topRatedSidebar.style.color = \"\";\n        seriesSidebar.style.backgroundColor = \"\";\n        seriesSidebar.style.color = \"\";\n        if (sidebar.classList.contains(\"open\")) {\n            sidebar.classList.remove(\"open\");\n            menuBtnChange();\n        }\n    } catch (err) {\n        console.error(err);\n    }\n};\nconst displayWatchlist = function(movies1) {\n    movies1.forEach((movie)=>{\n        const markup = `\r\n      <div class=\"movie__card\" data-title=\"${movie.title}\">\r\n        <img src=\"https://image.tmdb.org/t/p/w500/${movie.poster_path}\" alt=\"${movie.title}\">\r\n        <div class=\"div__detail\">\r\n          <h3>${movie.title}</h3>\r\n          <div class=\"movie__bottom\">\r\n          <span>${movie.release_date.substring(0, 4)}</span>\r\n          <span>\r\n          \r\n          \r\n          </span>\r\n        </div>\r\n        </div>\r\n      </div>\r\n    `;\n        moviesContainer.insertAdjacentHTML(\"beforeend\", markup);\n    });\n    const movieCards = document.querySelectorAll(\".movie__card\");\n    movieCards.forEach((card)=>{\n        card.addEventListener(\"click\", cardClick);\n    });\n};\nconst topRated = async function() {\n    try {\n        const res = await fetch(\"https://api.themoviedb.org/3/movie/top_rated?language=en-US&page=1\", options);\n        const data = await res.json();\n        if (!res.ok) throw new Error(`${data.message} (${res.status})`);\n        movies = data.results.filter((movie)=>movie.poster_path !== null && movie.backdrop_path !== null);\n        if (data.results && data.results.length > 0) {\n            moviesContainer.innerHTML = \"\";\n            displayMovies(movies);\n        }\n        input.forEach((input)=>{\n            input.value = \"\";\n        });\n        browseSidebar.style.backgroundColor = \"\";\n        browseSidebar.style.color = \"\";\n        trendingTopNav.classList.remove(\"nav__active\");\n        watchlistTopNav.classList.remove(\"nav__active\");\n        popularSidebar.style.backgroundColor = \"\";\n        popularSidebar.style.color = \"\";\n        browseSidebar.style.backgroundColor = \"\";\n        browseSidebar.style.color = \"\";\n        browseTopNav.classList.remove(\"nav__active\");\n        seriesTopNav.classList.remove(\"nav__active\");\n        trendingSidebar.style.backgroundColor = \"\";\n        trendingSidebar.style.color = \"\";\n        watchlistSidebar.style.backgroundColor = \"\";\n        watchlistSidebar.style.color = \"\";\n        topRatedSidebar.style.backgroundColor = \"\";\n        topRatedSidebar.style.color = \"\";\n        upcomingSidebar.style.backgroundColor = \"\";\n        upcomingSidebar.style.color = \"\";\n        pageName.innerHTML = \"Top Rated\";\n        topRatedSidebar.style.backgroundColor = \"white\";\n        topRatedSidebar.style.color = \"black\";\n        searchSidebar.style.backgroundColor = \"\";\n        searchSidebar.style.color = \"\";\n        seriesSidebar.style.backgroundColor = \"\";\n        seriesSidebar.style.color = \"\";\n        if (sidebar.classList.contains(\"open\")) {\n            sidebar.classList.remove(\"open\");\n            menuBtnChange();\n        }\n    } catch (err) {\n        console.error(err);\n    }\n};\nconst upcoming = async function() {\n    try {\n        const res = await fetch(\"https://api.themoviedb.org/3/movie/upcoming?language=en-US&page=1\", options);\n        const data = await res.json();\n        if (!res.ok) throw new Error(`${data.message} (${res.status})`);\n        movies = data.results.filter((movie)=>movie.poster_path !== null && movie.backdrop_path !== null);\n        if (data.results && data.results.length > 0) {\n            moviesContainer.innerHTML = \"\";\n            displayMovies(movies);\n        }\n        input.forEach((input)=>{\n            input.value = \"\";\n        });\n        pageName.innerHTML = \"Upcoming Movies\";\n        upcomingSidebar.style.backgroundColor = \"white\";\n        upcomingSidebar.style.color = \"black\";\n        browseSidebar.style.backgroundColor = \"\";\n        browseSidebar.style.color = \"\";\n        trendingTopNav.classList.remove(\"nav__active\");\n        browseTopNav.classList.remove(\"nav__active\");\n        watchlistTopNav.classList.remove(\"nav__active\");\n        seriesTopNav.classList.remove(\"nav__active\");\n        popularSidebar.style.backgroundColor = \"\";\n        popularSidebar.style.color = \"\";\n        searchSidebar.style.backgroundColor = \"\";\n        searchSidebar.style.color = \"\";\n        trendingSidebar.style.backgroundColor = \"\";\n        trendingSidebar.style.color = \"\";\n        watchlistSidebar.style.backgroundColor = \"\";\n        watchlistSidebar.style.color = \"\";\n        if (sidebar.classList.contains(\"open\")) {\n            sidebar.classList.remove(\"open\");\n            menuBtnChange();\n        }\n    } catch (err) {\n        console.error(err);\n    }\n};\nconst popular = async function() {\n    try {\n        const res = await fetch(\"https://api.themoviedb.org/3/movie/popular?language=en-US&page=1\", options);\n        const data = await res.json();\n        if (!res.ok) throw new Error(`${data.message} (${res.status})`);\n        movies = data.results.filter((movie)=>movie.poster_path !== null && movie.backdrop_path !== null);\n        if (data.results && data.results.length > 0) {\n            moviesContainer.innerHTML = \"\";\n            displayMovies(movies);\n        }\n        input.forEach((input)=>{\n            input.value = \"\";\n        });\n        pageName.innerHTML = \"Popular Movies\";\n        popularSidebar.style.backgroundColor = \"white\";\n        popularSidebar.style.color = \"black\";\n        watchlistSidebar.style.backgroundColor = \"\";\n        watchlistSidebar.style.color = \"\";\n        browseSidebar.style.backgroundColor = \"\";\n        browseSidebar.style.color = \"\";\n        searchSidebar.style.backgroundColor = \"\";\n        searchSidebar.style.color = \"\";\n        topRatedSidebar.style.backgroundColor = \"\";\n        topRatedSidebar.style.color = \"\";\n        trendingTopNav.classList.remove(\"nav__active\");\n        browseTopNav.classList.remove(\"nav__active\");\n        seriesTopNav.classList.remove(\"nav__active\");\n        watchlistTopNav.classList.remove(\"nav__active\");\n        if (sidebar.classList.contains(\"open\")) {\n            sidebar.classList.remove(\"open\");\n            menuBtnChange();\n        }\n    } catch (err) {\n        console.error(err);\n    }\n};\nconst getSeriesList = async function() {\n    try {\n        const res = await fetch(\"https://api.themoviedb.org/3/tv/popular?language=en-US&page=1\", options);\n        const data = await res.json();\n        if (!res.ok) throw new Error(`${data.message} (${res.status})`);\n        if (data.results && data.results.length > 0) {\n            moviesContainer.innerHTML = \"\";\n            movies = data.results.filter((movie)=>movie.poster_path !== null && movie.backdrop_path !== null);\n            displaySeries(movies);\n        }\n        input.forEach((input)=>{\n            input.value = \"\";\n        });\n        pageName.innerHTML = \"Tv series\";\n        popularSidebar.style.backgroundColor = \"\";\n        popularSidebar.style.color = \"\";\n        browseSidebar.style.backgroundColor = \"\";\n        browseSidebar.style.color = \"\";\n        searchSidebar.style.backgroundColor = \"\";\n        searchSidebar.style.color = \"\";\n        trendingSidebar.style.backgroundColor = \"\";\n        trendingSidebar.style.color = \"\";\n        trendingTopNav.classList.remove(\"nav__active\");\n        browseTopNav.classList.remove(\"nav__active\");\n        watchlistTopNav.classList.remove(\"nav__active\");\n        seriesTopNav.classList.add(\"nav__active\");\n        watchlistSidebar.style.backgroundColor = \"\";\n        watchlistSidebar.style.color = \"\";\n        seriesSidebar.style.backgroundColor = \"white\";\n        seriesSidebar.style.color = \"black\";\n        if (sidebar.classList.contains(\"open\")) {\n            sidebar.classList.remove(\"open\");\n            menuBtnChange();\n        }\n    } catch (err) {\n        console.error(err);\n    }\n};\nconst displaySeries = function(movies1) {\n    movies1.forEach((movie)=>{\n        const markup = `\r\n      <div class=\"movie__card\" data-title=\"${movie.name}\" data-id=\"${movie.id}\">\r\n        <img src=\"https://image.tmdb.org/t/p/w500/${movie.poster_path}\" alt=\"${movie.name}\">\r\n        <div class=\"div__detail\">\r\n          <h3>${movie.name}</h3>\r\n          <div class=\"movie__bottom\">\r\n            <span>${movie.first_air_date.substring(0, 4)}</span>\r\n            <span>\r\n              <i class='bx bx-plus-circle' onclick=\"addToWatchlist(event, ${movie.id});\"></i>\r\n              <h5 class='hover'>Add to Watchlist</h5>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\n        moviesContainer.insertAdjacentHTML(\"beforeend\", markup);\n    });\n    const movieCards = document.querySelectorAll(\".movie__card\");\n    movieCards.forEach((card)=>{\n        card.addEventListener(\"click\", seriesClick);\n    });\n};\nconst seriesClick = function(event) {\n    const clickedSeriesName = event.currentTarget.dataset.title;\n    const clickedSeries = movies.find((movie)=>movie.name === clickedSeriesName);\n    moviesPopup.innerHTML = \"\";\n    displaySeriesPopup(clickedSeries);\n    moviesPopup.style.display = \"\";\n};\nconst displaySeriesPopup = function(movie) {\n    const popupMarkup = `\r\n  <div class=\"overlay\">\r\n    <div class=\"movie_card\">\r\n      <div class=\"info_section\">\r\n      <span class=\"close\">&times;</span>\r\n\r\n        <div class=\"movie_header\">\r\n          <img class=\"locandina\" src=\"https://image.tmdb.org/t/p/w500/${movie.poster_path}\" alt=\"${movie.name}\">\r\n          <h1>${movie.name}</h1>\r\n          <h4>Released: ${movie.first_air_date.substring(0, 4)}</h4>\r\n        </div>\r\n        <div class=\"movie_desc\">\r\n          <p class=\"text\">${movie.overview}</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"blur_back ave_back\" style='background: url(\"https://image.tmdb.org/t/p/w500/${movie.backdrop_path}\"); background-size: cover; background-repeat: no-repeat;'></div>\r\n    </div>\r\n    </div>\r\n  `;\n    moviesPopup.insertAdjacentHTML(\"afterbegin\", popupMarkup);\n    const closePopup = document.querySelector(\".close\");\n    closePopup.addEventListener(\"click\", ()=>{\n        moviesPopup.style.display = \"none\";\n    });\n};\nseriesTopNav.addEventListener(\"click\", ()=>{\n    getSeriesList();\n});\nwatchlistTopNav.addEventListener(\"click\", ()=>{\n    getWatchlist();\n});\ntrendingTopNav.addEventListener(\"click\", ()=>{\n    trendingMovies();\n});\nbrowseTopNav.addEventListener(\"click\", ()=>{\n    discoverMovies();\n});\nbrowseLink.addEventListener(\"click\", ()=>{\n    discoverMovies();\n});\ntrendingLink.addEventListener(\"click\", ()=>{\n    trendingMovies();\n});\ntvSeriesLink.addEventListener(\"click\", ()=>{\n    getSeriesList();\n});\nwatchlistLink.addEventListener(\"click\", ()=>{\n    getWatchlist();\n});\ntopRatedLink.addEventListener(\"click\", ()=>{\n    topRated();\n});\npopularLink.addEventListener(\"click\", ()=>{\n    popular();\n});\nupcomingLink.addEventListener(\"click\", ()=>{\n    upcoming();\n});\ndiscoverMovies();\ncloseBtn.addEventListener(\"click\", ()=>{\n    sidebar.classList.toggle(\"open\");\n    menuBtnChange();\n});\nfunction menuBtnChange() {\n    if (sidebar.classList.contains(\"open\")) closeBtn.classList.replace(\"bx-menu\", \"bx-x\");\n    else closeBtn.classList.replace(\"bx-x\", \"bx-menu\");\n}\nwindow.onscroll = function() {\n    scrollFunction();\n};\nfunction scrollFunction() {\n    if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) goToTop.style.display = \"block\";\n    else goToTop.style.display = \"none\";\n}\nfunction scrollToTop() {\n    window.scrollTo({\n        top: 0,\n        behavior: \"smooth\"\n    });\n}\ngoToTop.addEventListener(\"click\", scrollToTop);\n\n//# sourceMappingURL=index.361730bf.js.map\n","const discoverEndpoint = \"https://api.themoviedb.org/3/discover/movie\";\r\nconst apiKey = \"7eae2080d0b3d02dcdb56c3aba64a598\";\r\n\r\nconst moviesContainer = document.querySelector(\".cards\");\r\nconst moviesPopup = document.querySelector(\".popup\");\r\nconst input = document.querySelectorAll(\".input\");\r\nconst success = document.querySelector(\".success\");\r\n\r\nconst pageName = document.querySelector(\".name\");\r\nconst trendingSidebar = document.querySelector(\".bx-trending-up\");\r\nconst searchSidebar = document.querySelector(\".bx-search\");\r\nconst topRatedSidebar = document.querySelector(\".bx-trophy\");\r\nconst upcomingSidebar = document.querySelector(\".bxs-hourglass\");\r\nconst popularSidebar = document.querySelector(\".bxs-hot\");\r\nconst seriesSidebar = document.querySelector(\".bx-tv\");\r\n\r\nconst trendingTopNav = document.getElementById(\"trending\");\r\nconst browseSidebar = document.querySelector(\".bx-compass\");\r\nconst browseTopNav = document.getElementById(\"browse\");\r\n\r\nconst watchlistSidebar = document.querySelector(\".bx-movie-play\");\r\nconst watchlistTopNav = document.getElementById(\"watchlist\");\r\n\r\nconst seriesTopNav = document.getElementById(\"series\");\r\nlet sidebar = document.querySelector(\".sidebar\");\r\nlet closeBtn = document.querySelector(\"#btn\");\r\n\r\nconst browseLink = document.getElementById(\"browseLink\");\r\nconst trendingLink = document.getElementById(\"trendingLink\");\r\nconst tvSeriesLink = document.getElementById(\"tvSeriesLink\");\r\nconst watchlistLink = document.getElementById(\"watchlistLink\");\r\nconst topRatedLink = document.getElementById(\"topRatedLink\");\r\nconst popularLink = document.getElementById(\"popularLink\");\r\nconst upcomingLink = document.getElementById(\"upcomingLink\");\r\nconst goToTop = document.querySelector(\".goToTop\");\r\n\r\nconst options = {\r\n  method: \"GET\",\r\n  headers: {\r\n    accept: \"application/json\",\r\n    Authorization:\r\n      \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3ZWFlMjA4MGQwYjNkMDJkY2RiNTZjM2FiYTY0YTU5OCIsInN1YiI6IjY1NTY5ZGFiMjJhZjNlMDBjNjNiNzcyNCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.vSLXJx8skM5XxasjJw4kUh6y1fyMkbZ-cJMtmav_JE8\",\r\n  },\r\n};\r\n\r\nconst discoverMovies = async function () {\r\n  try {\r\n    const res = await fetch(\r\n      `${discoverEndpoint}?include_adult=false&include_video=false&language=en-US&page=1&sort_by=popularity.desc`,\r\n      options\r\n    );\r\n\r\n    const data = await res.json();\r\n\r\n    if (!res.ok) throw new Error(`${data.message} (${res.status})`);\r\n\r\n    if (data.results && data.results.length > 0) {\r\n      movies = data.results;\r\n      displayMovies(movies);\r\n    }\r\n\r\n    input.forEach((input) => {\r\n      input.value = \"\";\r\n    });\r\n\r\n    pageName.innerHTML = \"Browse\";\r\n    browseSidebar.style.backgroundColor = \"white\";\r\n    browseSidebar.style.color = \"black\";\r\n\r\n    browseTopNav.classList.add(\"nav__active\");\r\n    trendingSidebar.style.backgroundColor = \"\";\r\n    trendingSidebar.style.color = \"\";\r\n    trendingTopNav.classList.remove(\"nav__active\");\r\n\r\n    topRatedSidebar.style.backgroundColor = \"\";\r\n    topRatedSidebar.style.color = \"\";\r\n\r\n    watchlistSidebar.style.backgroundColor = \"\";\r\n    watchlistSidebar.style.color = \"\";\r\n    watchlistTopNav.classList.remove(\"nav__active\");\r\n\r\n    upcomingSidebar.style.backgroundColor = \"\";\r\n    upcomingSidebar.style.color = \"\";\r\n\r\n    popularSidebar.style.backgroundColor = \"\";\r\n    popularSidebar.style.color = \"\";\r\n\r\n    // searchSidebar.style.display = \"none\";\r\n\r\n    searchSidebar.style.backgroundColor = \"\";\r\n    searchSidebar.style.color = \"\";\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\nconst displayMovies = function (movies) {\r\n  movies.forEach((movie) => {\r\n    const markup = `\r\n      <div class=\"movie__card\" data-title=\"${movie.title}\" data-id=\"${\r\n      movie.id\r\n    }\">\r\n        <img src=\"https://image.tmdb.org/t/p/w500/${movie.poster_path}\" alt=\"${\r\n      movie.title\r\n    }\">\r\n        <div class=\"div__detail\">\r\n          <h3>${movie.title}</h3>\r\n          <div class=\"movie__bottom\">\r\n          <span>${movie.release_date.substring(0, 4)}</span>\r\n          <span>\r\n          <i class='bx bx-plus-circle' onclick=\"addToWatchlist(event, ${\r\n            movie.id\r\n          });\"></i>\r\n          <h5 class='hover'>Add to Watchlist</h5>\r\n          \r\n          </span>\r\n        </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n    moviesContainer.insertAdjacentHTML(\"beforeend\", markup);\r\n  });\r\n\r\n  const movieCards = document.querySelectorAll(\".movie__card\");\r\n  movieCards.forEach((card) => {\r\n    card.addEventListener(\"click\", cardClick);\r\n  });\r\n};\r\n\r\nconst cardClick = function (event) {\r\n  const clickedMovieTitle = event.currentTarget.dataset.title;\r\n  const clickedMovie = movies.find(\r\n    (movie) => movie.title === clickedMovieTitle\r\n  );\r\n\r\n  moviesPopup.innerHTML = \"\";\r\n\r\n  displayPopup(clickedMovie);\r\n  moviesPopup.style.display = \"\";\r\n};\r\n\r\nconst displayPopup = function (movie) {\r\n  const popupMarkup = `\r\n  <div class=\"overlay\">\r\n    <div class=\"movie_card\">\r\n      <div class=\"info_section\">\r\n      <span class=\"close\">&times;</span>\r\n\r\n        <div class=\"movie_header\">\r\n          <img class=\"locandina\" src=\"https://image.tmdb.org/t/p/w500/${\r\n            movie.poster_path\r\n          }\" alt=\"${movie.title}\">\r\n          <h1>${movie.title}</h1>\r\n          <h4>Released: ${movie.release_date.substring(0, 4)}</h4>\r\n        </div>\r\n        <div class=\"movie_desc\">\r\n          <p class=\"text\">${movie.overview}</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"blur_back ave_back\" style='background: url(\"https://image.tmdb.org/t/p/w500/${\r\n        movie.backdrop_path\r\n      }\"); background-size: cover; background-repeat: no-repeat;'></div>\r\n    </div>\r\n    </div>\r\n  `;\r\n\r\n  moviesPopup.insertAdjacentHTML(\"afterbegin\", popupMarkup);\r\n\r\n  const closePopup = document.querySelector(\".close\");\r\n  const movieCard = document.querySelector(\".movie_card\");\r\n\r\n  closePopup.addEventListener(\"click\", () => {\r\n    movieCard.style.animation = \"holeOut .5s ease\";\r\n    setTimeout(() => {\r\n      moviesPopup.style.display = \"none\";\r\n    }, 400);\r\n  });\r\n};\r\n\r\nconst trendingMovies = async function () {\r\n  try {\r\n    const res = await fetch(\r\n      \"https://api.themoviedb.org/3/trending/movie/day?language=en-US\",\r\n      options\r\n    );\r\n\r\n    const data = await res.json();\r\n\r\n    if (!res.ok) throw new Error(`${data.message} (${res.status})`);\r\n\r\n    if (data.results && data.results.length > 0) {\r\n      movies = data.results;\r\n      moviesContainer.innerHTML = \"\";\r\n      displayMovies(movies);\r\n    }\r\n    input.forEach((input) => {\r\n      input.value = \"\";\r\n    });\r\n\r\n    browseSidebar.style.backgroundColor = \"\";\r\n    browseSidebar.style.color = \"\";\r\n    trendingTopNav.classList.add(\"nav__active\");\r\n    browseTopNav.classList.remove(\"nav__active\");\r\n    trendingSidebar.style.backgroundColor = \"\";\r\n    trendingSidebar.style.color = \"\";\r\n    topRatedSidebar.style.backgroundColor = \"\";\r\n    topRatedSidebar.style.color = \"\";\r\n\r\n    watchlistSidebar.style.backgroundColor = \"\";\r\n    watchlistSidebar.style.color = \"\";\r\n    watchlistTopNav.classList.remove(\"nav__active\");\r\n\r\n    popularSidebar.style.backgroundColor = \"\";\r\n    popularSidebar.style.color = \"\";\r\n\r\n    pageName.innerHTML = \"Trending Movies\";\r\n    trendingSidebar.style.backgroundColor = \"white\";\r\n    trendingSidebar.style.color = \"black\";\r\n    trendingTopNav.classList.add(\"nav__active\");\r\n\r\n    upcomingSidebar.style.backgroundColor = \"\";\r\n    upcomingSidebar.style.color = \"\";\r\n\r\n    searchSidebar.style.backgroundColor = \"\";\r\n    searchSidebar.style.color = \"\";\r\n\r\n    if (sidebar.classList.contains(\"open\")) {\r\n      sidebar.classList.remove(\"open\");\r\n      menuBtnChange();\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\nconst searchMovies = async function (query) {\r\n  try {\r\n    const res = await fetch(\r\n      `https://api.themoviedb.org/3/search/movie?include_adult=false&language=en-US&page=1&query=${query}`,\r\n      options\r\n    );\r\n\r\n    const data = await res.json();\r\n\r\n    if (!res.ok) throw new Error(`${data.message} (${res.status})`);\r\n\r\n    movies = data.results.filter(\r\n      (movie) => movie.poster_path !== null && movie.backdrop_path !== null\r\n    );\r\n    if (data.results && data.results.length > 0) {\r\n      moviesContainer.innerHTML = \"\";\r\n      displayMovies(movies);\r\n    }\r\n\r\n    pageName.innerHTML = \"Search\";\r\n    searchSidebar.style.backgroundColor = \"white\";\r\n    searchSidebar.style.color = \"black\";\r\n    searchSidebar.style.display = \"block\";\r\n\r\n    browseSidebar.style.backgroundColor = \"\";\r\n    browseSidebar.style.color = \"\";\r\n\r\n    watchlistSidebar.style.backgroundColor = \"\";\r\n    watchlistSidebar.style.color = \"\";\r\n    watchlistTopNav.classList.remove(\"nav__active\");\r\n\r\n    trendingTopNav.classList.remove(\"nav__active\");\r\n    browseTopNav.classList.remove(\"nav__active\");\r\n\r\n    popularSidebar.style.backgroundColor = \"\";\r\n    popularSidebar.style.color = \"\";\r\n\r\n    if (sidebar.classList.contains(\"open\")) {\r\n      sidebar.classList.remove(\"open\");\r\n      menuBtnChange();\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\ninput.forEach((input) => {\r\n  input.addEventListener(\"keydown\", function (event) {\r\n    if (event.key === \"Enter\") {\r\n      const query = event.target.value;\r\n      searchMovies(query);\r\n    }\r\n  });\r\n});\r\n\r\nconst addToWatchlist = async function (event, movieIdToAdd) {\r\n  try {\r\n    event.stopPropagation();\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: {\r\n        accept: \"application/json\",\r\n        \"content-type\": \"application/json\",\r\n        Authorization:\r\n          \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3ZWFlMjA4MGQwYjNkMDJkY2RiNTZjM2FiYTY0YTU5OCIsInN1YiI6IjY1NTY5ZGFiMjJhZjNlMDBjNjNiNzcyNCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.vSLXJx8skM5XxasjJw4kUh6y1fyMkbZ-cJMtmav_JE8\",\r\n      },\r\n      body: JSON.stringify({\r\n        media_type: \"movie\",\r\n        media_id: movieIdToAdd,\r\n        watchlist: true,\r\n      }),\r\n    };\r\n\r\n    const res = await fetch(\r\n      \"https://api.themoviedb.org/3/account/20711933/watchlist\",\r\n      options\r\n    );\r\n\r\n    success.style.display = \"block\";\r\n\r\n    setTimeout(() => {\r\n      success.style.display = \"none\";\r\n    }, 3000);\r\n\r\n    const data = await res.json();\r\n\r\n    if (!res.ok) throw new Error(`${data.message} (${res.status})`);\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\nconst getWatchlist = async function (movieIdToAdd) {\r\n  try {\r\n    const res = await fetch(\r\n      \"https://api.themoviedb.org/3/account/20711933/watchlist/movies?language=en-US&page=1&sort_by=created_at.asc\",\r\n      options\r\n    );\r\n\r\n    const data = await res.json();\r\n\r\n    if (!res.ok) throw new Error(`${data.message} (${res.status})`);\r\n\r\n    movies = data.results.filter(\r\n      (movie) => movie.poster_path !== null && movie.backdrop_path !== null\r\n    );\r\n\r\n    if (data.results && data.results.length > 0) {\r\n      moviesContainer.innerHTML = \"\";\r\n      displayWatchlist(movies);\r\n    }\r\n\r\n    input.forEach((input) => {\r\n      input.value = \"\";\r\n    });\r\n\r\n    pageName.innerHTML = \"Watchlist\";\r\n    watchlistSidebar.style.backgroundColor = \"white\";\r\n    watchlistSidebar.style.color = \"black\";\r\n\r\n    searchSidebar.style.backgroundColor = \"\";\r\n    searchSidebar.style.color = \"\";\r\n\r\n    popularSidebar.style.backgroundColor = \"\";\r\n    popularSidebar.style.color = \"\";\r\n\r\n    browseSidebar.style.backgroundColor = \"\";\r\n    browseSidebar.style.color = \"\";\r\n\r\n    trendingTopNav.classList.remove(\"nav__active\");\r\n    browseTopNav.classList.remove(\"nav__active\");\r\n    seriesTopNav.classList.remove(\"nav__active\");\r\n    watchlistTopNav.classList.add(\"nav__active\");\r\n\r\n    upcomingSidebar.style.backgroundColor = \"\";\r\n    upcomingSidebar.style.color = \"\";\r\n\r\n    topRatedSidebar.style.backgroundColor = \"\";\r\n    topRatedSidebar.style.color = \"\";\r\n\r\n    seriesSidebar.style.backgroundColor = \"\";\r\n    seriesSidebar.style.color = \"\";\r\n\r\n    if (sidebar.classList.contains(\"open\")) {\r\n      sidebar.classList.remove(\"open\");\r\n      menuBtnChange();\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\nconst displayWatchlist = function (movies) {\r\n  movies.forEach((movie) => {\r\n    const markup = `\r\n      <div class=\"movie__card\" data-title=\"${movie.title}\">\r\n        <img src=\"https://image.tmdb.org/t/p/w500/${movie.poster_path}\" alt=\"${\r\n      movie.title\r\n    }\">\r\n        <div class=\"div__detail\">\r\n          <h3>${movie.title}</h3>\r\n          <div class=\"movie__bottom\">\r\n          <span>${movie.release_date.substring(0, 4)}</span>\r\n          <span>\r\n          \r\n          \r\n          </span>\r\n        </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n    moviesContainer.insertAdjacentHTML(\"beforeend\", markup);\r\n  });\r\n\r\n  const movieCards = document.querySelectorAll(\".movie__card\");\r\n  movieCards.forEach((card) => {\r\n    card.addEventListener(\"click\", cardClick);\r\n  });\r\n};\r\n\r\nconst topRated = async function () {\r\n  try {\r\n    const res = await fetch(\r\n      \"https://api.themoviedb.org/3/movie/top_rated?language=en-US&page=1\",\r\n      options\r\n    );\r\n\r\n    const data = await res.json();\r\n\r\n    if (!res.ok) throw new Error(`${data.message} (${res.status})`);\r\n\r\n    movies = data.results.filter(\r\n      (movie) => movie.poster_path !== null && movie.backdrop_path !== null\r\n    );\r\n\r\n    if (data.results && data.results.length > 0) {\r\n      moviesContainer.innerHTML = \"\";\r\n      displayMovies(movies);\r\n    }\r\n\r\n    input.forEach((input) => {\r\n      input.value = \"\";\r\n    });\r\n\r\n    browseSidebar.style.backgroundColor = \"\";\r\n    browseSidebar.style.color = \"\";\r\n\r\n    trendingTopNav.classList.remove(\"nav__active\");\r\n    watchlistTopNav.classList.remove(\"nav__active\");\r\n\r\n    popularSidebar.style.backgroundColor = \"\";\r\n    popularSidebar.style.color = \"\";\r\n\r\n    browseSidebar.style.backgroundColor = \"\";\r\n    browseSidebar.style.color = \"\";\r\n    browseTopNav.classList.remove(\"nav__active\");\r\n    seriesTopNav.classList.remove(\"nav__active\");\r\n    trendingSidebar.style.backgroundColor = \"\";\r\n    trendingSidebar.style.color = \"\";\r\n    watchlistSidebar.style.backgroundColor = \"\";\r\n    watchlistSidebar.style.color = \"\";\r\n    topRatedSidebar.style.backgroundColor = \"\";\r\n    topRatedSidebar.style.color = \"\";\r\n\r\n    upcomingSidebar.style.backgroundColor = \"\";\r\n    upcomingSidebar.style.color = \"\";\r\n\r\n    pageName.innerHTML = \"Top Rated\";\r\n    topRatedSidebar.style.backgroundColor = \"white\";\r\n    topRatedSidebar.style.color = \"black\";\r\n\r\n    searchSidebar.style.backgroundColor = \"\";\r\n    searchSidebar.style.color = \"\";\r\n\r\n    seriesSidebar.style.backgroundColor = \"\";\r\n    seriesSidebar.style.color = \"\";\r\n\r\n    if (sidebar.classList.contains(\"open\")) {\r\n      sidebar.classList.remove(\"open\");\r\n      menuBtnChange();\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\nconst upcoming = async function () {\r\n  try {\r\n    const res = await fetch(\r\n      \"https://api.themoviedb.org/3/movie/upcoming?language=en-US&page=1\",\r\n      options\r\n    );\r\n\r\n    const data = await res.json();\r\n\r\n    if (!res.ok) throw new Error(`${data.message} (${res.status})`);\r\n\r\n    movies = data.results.filter(\r\n      (movie) => movie.poster_path !== null && movie.backdrop_path !== null\r\n    );\r\n\r\n    if (data.results && data.results.length > 0) {\r\n      moviesContainer.innerHTML = \"\";\r\n      displayMovies(movies);\r\n    }\r\n\r\n    input.forEach((input) => {\r\n      input.value = \"\";\r\n    });\r\n\r\n    pageName.innerHTML = \"Upcoming Movies\";\r\n    upcomingSidebar.style.backgroundColor = \"white\";\r\n    upcomingSidebar.style.color = \"black\";\r\n\r\n    browseSidebar.style.backgroundColor = \"\";\r\n    browseSidebar.style.color = \"\";\r\n\r\n    trendingTopNav.classList.remove(\"nav__active\");\r\n    browseTopNav.classList.remove(\"nav__active\");\r\n    watchlistTopNav.classList.remove(\"nav__active\");\r\n    seriesTopNav.classList.remove(\"nav__active\");\r\n\r\n    popularSidebar.style.backgroundColor = \"\";\r\n    popularSidebar.style.color = \"\";\r\n\r\n    searchSidebar.style.backgroundColor = \"\";\r\n    searchSidebar.style.color = \"\";\r\n\r\n    trendingSidebar.style.backgroundColor = \"\";\r\n    trendingSidebar.style.color = \"\";\r\n    watchlistSidebar.style.backgroundColor = \"\";\r\n    watchlistSidebar.style.color = \"\";\r\n\r\n    if (sidebar.classList.contains(\"open\")) {\r\n      sidebar.classList.remove(\"open\");\r\n      menuBtnChange();\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\nconst popular = async function () {\r\n  try {\r\n    const res = await fetch(\r\n      \"https://api.themoviedb.org/3/movie/popular?language=en-US&page=1\",\r\n\r\n      options\r\n    );\r\n\r\n    const data = await res.json();\r\n\r\n    if (!res.ok) throw new Error(`${data.message} (${res.status})`);\r\n\r\n    movies = data.results.filter(\r\n      (movie) => movie.poster_path !== null && movie.backdrop_path !== null\r\n    );\r\n\r\n    if (data.results && data.results.length > 0) {\r\n      moviesContainer.innerHTML = \"\";\r\n      displayMovies(movies);\r\n    }\r\n\r\n    input.forEach((input) => {\r\n      input.value = \"\";\r\n    });\r\n\r\n    pageName.innerHTML = \"Popular Movies\";\r\n\r\n    popularSidebar.style.backgroundColor = \"white\";\r\n    popularSidebar.style.color = \"black\";\r\n\r\n    watchlistSidebar.style.backgroundColor = \"\";\r\n    watchlistSidebar.style.color = \"\";\r\n\r\n    browseSidebar.style.backgroundColor = \"\";\r\n    browseSidebar.style.color = \"\";\r\n\r\n    searchSidebar.style.backgroundColor = \"\";\r\n    searchSidebar.style.color = \"\";\r\n\r\n    topRatedSidebar.style.backgroundColor = \"\";\r\n    topRatedSidebar.style.color = \"\";\r\n\r\n    trendingTopNav.classList.remove(\"nav__active\");\r\n    browseTopNav.classList.remove(\"nav__active\");\r\n    seriesTopNav.classList.remove(\"nav__active\");\r\n    watchlistTopNav.classList.remove(\"nav__active\");\r\n\r\n    if (sidebar.classList.contains(\"open\")) {\r\n      sidebar.classList.remove(\"open\");\r\n      menuBtnChange();\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\nconst getSeriesList = async function () {\r\n  try {\r\n    const res = await fetch(\r\n      \"https://api.themoviedb.org/3/tv/popular?language=en-US&page=1\",\r\n      options\r\n    );\r\n\r\n    const data = await res.json();\r\n\r\n    if (!res.ok) throw new Error(`${data.message} (${res.status})`);\r\n\r\n    if (data.results && data.results.length > 0) {\r\n      moviesContainer.innerHTML = \"\";\r\n\r\n      movies = data.results.filter(\r\n        (movie) => movie.poster_path !== null && movie.backdrop_path !== null\r\n      );\r\n\r\n      displaySeries(movies);\r\n    }\r\n\r\n    input.forEach((input) => {\r\n      input.value = \"\";\r\n    });\r\n\r\n    pageName.innerHTML = \"Tv series\";\r\n\r\n    popularSidebar.style.backgroundColor = \"\";\r\n    popularSidebar.style.color = \"\";\r\n\r\n    browseSidebar.style.backgroundColor = \"\";\r\n    browseSidebar.style.color = \"\";\r\n\r\n    searchSidebar.style.backgroundColor = \"\";\r\n    searchSidebar.style.color = \"\";\r\n\r\n    trendingSidebar.style.backgroundColor = \"\";\r\n    trendingSidebar.style.color = \"\";\r\n\r\n    trendingTopNav.classList.remove(\"nav__active\");\r\n    browseTopNav.classList.remove(\"nav__active\");\r\n    watchlistTopNav.classList.remove(\"nav__active\");\r\n    seriesTopNav.classList.add(\"nav__active\");\r\n\r\n    watchlistSidebar.style.backgroundColor = \"\";\r\n    watchlistSidebar.style.color = \"\";\r\n\r\n    seriesSidebar.style.backgroundColor = \"white\";\r\n    seriesSidebar.style.color = \"black\";\r\n\r\n    if (sidebar.classList.contains(\"open\")) {\r\n      sidebar.classList.remove(\"open\");\r\n      menuBtnChange();\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\nconst displaySeries = function (movies) {\r\n  movies.forEach((movie) => {\r\n    const markup = `\r\n      <div class=\"movie__card\" data-title=\"${movie.name}\" data-id=\"${movie.id}\">\r\n        <img src=\"https://image.tmdb.org/t/p/w500/${movie.poster_path}\" alt=\"${\r\n      movie.name\r\n    }\">\r\n        <div class=\"div__detail\">\r\n          <h3>${movie.name}</h3>\r\n          <div class=\"movie__bottom\">\r\n            <span>${movie.first_air_date.substring(0, 4)}</span>\r\n            <span>\r\n              <i class='bx bx-plus-circle' onclick=\"addToWatchlist(event, ${\r\n                movie.id\r\n              });\"></i>\r\n              <h5 class='hover'>Add to Watchlist</h5>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n    moviesContainer.insertAdjacentHTML(\"beforeend\", markup);\r\n  });\r\n\r\n  const movieCards = document.querySelectorAll(\".movie__card\");\r\n  movieCards.forEach((card) => {\r\n    card.addEventListener(\"click\", seriesClick);\r\n  });\r\n};\r\n\r\nconst seriesClick = function (event) {\r\n  const clickedSeriesName = event.currentTarget.dataset.title;\r\n\r\n  const clickedSeries = movies.find(\r\n    (movie) => movie.name === clickedSeriesName\r\n  );\r\n\r\n  moviesPopup.innerHTML = \"\";\r\n\r\n  displaySeriesPopup(clickedSeries);\r\n  moviesPopup.style.display = \"\";\r\n};\r\n\r\nconst displaySeriesPopup = function (movie) {\r\n  const popupMarkup = `\r\n  <div class=\"overlay\">\r\n    <div class=\"movie_card\">\r\n      <div class=\"info_section\">\r\n      <span class=\"close\">&times;</span>\r\n\r\n        <div class=\"movie_header\">\r\n          <img class=\"locandina\" src=\"https://image.tmdb.org/t/p/w500/${\r\n            movie.poster_path\r\n          }\" alt=\"${movie.name}\">\r\n          <h1>${movie.name}</h1>\r\n          <h4>Released: ${movie.first_air_date.substring(0, 4)}</h4>\r\n        </div>\r\n        <div class=\"movie_desc\">\r\n          <p class=\"text\">${movie.overview}</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"blur_back ave_back\" style='background: url(\"https://image.tmdb.org/t/p/w500/${\r\n        movie.backdrop_path\r\n      }\"); background-size: cover; background-repeat: no-repeat;'></div>\r\n    </div>\r\n    </div>\r\n  `;\r\n\r\n  moviesPopup.insertAdjacentHTML(\"afterbegin\", popupMarkup);\r\n\r\n  const closePopup = document.querySelector(\".close\");\r\n  closePopup.addEventListener(\"click\", () => {\r\n    moviesPopup.style.display = \"none\";\r\n  });\r\n};\r\n\r\nseriesTopNav.addEventListener(\"click\", () => {\r\n  getSeriesList();\r\n});\r\n\r\nwatchlistTopNav.addEventListener(\"click\", () => {\r\n  getWatchlist();\r\n});\r\n\r\ntrendingTopNav.addEventListener(\"click\", () => {\r\n  trendingMovies();\r\n});\r\n\r\nbrowseTopNav.addEventListener(\"click\", () => {\r\n  discoverMovies();\r\n});\r\n\r\nbrowseLink.addEventListener(\"click\", () => {\r\n  discoverMovies();\r\n});\r\n\r\ntrendingLink.addEventListener(\"click\", () => {\r\n  trendingMovies();\r\n});\r\n\r\ntvSeriesLink.addEventListener(\"click\", () => {\r\n  getSeriesList();\r\n});\r\n\r\nwatchlistLink.addEventListener(\"click\", () => {\r\n  getWatchlist();\r\n});\r\n\r\ntopRatedLink.addEventListener(\"click\", () => {\r\n  topRated();\r\n});\r\n\r\npopularLink.addEventListener(\"click\", () => {\r\n  popular();\r\n});\r\n\r\nupcomingLink.addEventListener(\"click\", () => {\r\n  upcoming();\r\n});\r\n\r\ndiscoverMovies();\r\n\r\ncloseBtn.addEventListener(\"click\", () => {\r\n  sidebar.classList.toggle(\"open\");\r\n  menuBtnChange();\r\n});\r\n\r\nfunction menuBtnChange() {\r\n  if (sidebar.classList.contains(\"open\")) {\r\n    closeBtn.classList.replace(\"bx-menu\", \"bx-x\");\r\n  } else {\r\n    closeBtn.classList.replace(\"bx-x\", \"bx-menu\");\r\n  }\r\n}\r\n\r\nwindow.onscroll = function () {\r\n  scrollFunction();\r\n};\r\n\r\nfunction scrollFunction() {\r\n  if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {\r\n    goToTop.style.display = \"block\";\r\n  } else {\r\n    goToTop.style.display = \"none\";\r\n  }\r\n}\r\n\r\nfunction scrollToTop() {\r\n  window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n}\r\n\r\ngoToTop.addEventListener(\"click\", scrollToTop);\r\n"],"names":["moviesContainer","document","querySelector","moviesPopup","input","querySelectorAll","pageName","trendingSidebar","searchSidebar","topRatedSidebar","upcomingSidebar","popularSidebar","seriesSidebar","trendingTopNav","getElementById","browseSidebar","browseTopNav","watchlistSidebar","watchlistTopNav","seriesTopNav","sidebar","closeBtn","browseLink","trendingLink","tvSeriesLink","watchlistLink","topRatedLink","popularLink","upcomingLink","goToTop","options","method","headers","accept","Authorization","discoverMovies","res","fetch","data","json","ok","Error","message","status","results","length","movies","displayMovies","forEach","value","innerHTML","style","backgroundColor","color","classList","add","remove","err","console","error","movies1","movie","markup","title","id","poster_path","release_date","substring","insertAdjacentHTML","movieCards","card","addEventListener","cardClick","event","clickedMovieTitle","currentTarget","dataset","clickedMovie","find","displayPopup","display","popupMarkup","overview","backdrop_path","closePopup","movieCard","animation","setTimeout","trendingMovies","contains","menuBtnChange","searchMovies","query","filter","key","target","getWatchlist","movieIdToAdd","displayWatchlist","topRated","upcoming","popular","getSeriesList","displaySeries","name","first_air_date","seriesClick","clickedSeriesName","clickedSeries","displaySeriesPopup","replace","toggle","window","onscroll","body","scrollTop","documentElement","scrollTo","top","behavior"],"version":3,"file":"index.361730bf.js.map"}